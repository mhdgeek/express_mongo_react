version: "3.9"

services:
  frontend:
    image: mhd0/react-frontend:latest
    container_name: react-frontend
    build:
      context: ./front-end
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:5001/api
    networks:
      - backend-net
    restart: unless-stopped

  backend:
    image: mhd0/express-backend:latest
    container_name: express-api
    build:
      context: ./back-end
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - MONGODB_URI=mongodb://mongo:27017/smartphoneDB
    depends_on:
      - mongo
    networks:
      - backend-net
    restart: unless-stopped

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=smartphoneDB
    networks:
      - backend-net
    restart: unless-stopped

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - sonar-db
    networks:
      - backend-net
    restart: unless-stopped

  sonar-db:
    image: postgres:15
    container_name: sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    networks:
      - backend-net
    restart: unless-stopped

volumes:
  mongo_data:

networks:
  backend-net:
    driver: bridge
